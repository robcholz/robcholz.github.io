<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>robcholz</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://robcholz.github.io/"/>
  <updated>2025-11-01T22:16:20.182Z</updated>
  <id>https://robcholz.github.io/</id>
  
  <author>
    <name>robcholz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[Foundation] Applied Electronics</title>
    <link href="https://robcholz.github.io/2025/09/29/applied-electronics/"/>
    <id>https://robcholz.github.io/2025/09/29/applied-electronics/</id>
    <published>2025-09-29T01:13:00.000Z</published>
    <updated>2025-11-01T22:16:20.182Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Foundation-Applied-Electronics"><a href="#Foundation-Applied-Electronics" class="headerlink" title="[Foundation] Applied Electronics"></a>[Foundation] Applied Electronics</h1><h2 id="1-Resistor"><a href="#1-Resistor" class="headerlink" title="1. Resistor"></a>1. Resistor</h2><h3 id="1-1-Voltage-Division"><a href="#1-1-Voltage-Division" class="headerlink" title="1.1 Voltage Division"></a>1.1 Voltage Division</h3><p>Resistors can be connected in series to divide voltage, commonly used for ADC inputs or op-amp biasing.</p><ul><li>Consider the <strong>resistance ratio</strong> and <strong>ADC resolution</strong> when designing a divider.</li><li>If <strong>low quiescent current</strong> is required, the divider’s output impedance increases, which affects accuracy:<ul><li>The ADC’s internal sampling capacitor may not fully charge.</li><li>The measured voltage may have error due to the <strong>RC time constant</strong>.</li></ul></li><li>When measuring <strong>high currents</strong>, use a <strong>high-power resistor</strong> to handle heat dissipation.</li></ul><hr><h3 id="1-2-Current-Limiting"><a href="#1-2-Current-Limiting" class="headerlink" title="1.2 Current Limiting"></a>1.2 Current Limiting</h3><p>Used to limit current to safe levels.</p><ul><li>Typical use cases: LED current control, MOSFET gate protection, transistor base drive.</li></ul><hr><h3 id="1-3-Pull-Up-Pull-Down"><a href="#1-3-Pull-Up-Pull-Down" class="headerlink" title="1.3 Pull-Up / Pull-Down"></a>1.3 Pull-Up / Pull-Down</h3><p>Used to define a stable logic level on floating pins (e.g., MCU inputs, I²C lines).</p><ul><li>Provides source current for <strong>open-drain/open-collector</strong> circuits.</li><li>Typical resistance ranges:<ul><li><strong>I²C:</strong> 2.2k–400kΩ (commonly 4.7k–10kΩ)</li><li><strong>MCU GPIO:</strong> ~10kΩ</li></ul></li><li>When low-power operation is critical, choose higher resistance to reduce <strong>quiescent current</strong>.</li></ul><hr><h3 id="1-4-Stabilization-Damping"><a href="#1-4-Stabilization-Damping" class="headerlink" title="1.4 Stabilization / Damping"></a>1.4 Stabilization / Damping</h3><p>Used to isolate and stabilize signal lines.</p><ul><li>Known as <strong>isolation resistors</strong> or <strong>damping resistors</strong>.</li><li>Reduces ringing, EMI, and cross-coupling on high-speed or sensitive traces.</li></ul><hr><h2 id="2-Capacitor"><a href="#2-Capacitor" class="headerlink" title="2. Capacitor"></a>2. Capacitor</h2><h3 id="2-1-Filtering-Decoupling"><a href="#2-1-Filtering-Decoupling" class="headerlink" title="2.1 Filtering / Decoupling"></a>2.1 Filtering / Decoupling</h3><p>Used to smooth voltage and suppress high-frequency noise.</p><ul><li>Place <strong>as close as possible</strong> to IC power pins.</li><li>Typical range: <strong>0.01 µF – 100 µF</strong>.</li><li>Pay attention to <strong>ESR</strong> (Equivalent Series Resistance) and <strong>stability</strong>.</li></ul><hr><h3 id="2-2-Timing-Oscillator"><a href="#2-2-Timing-Oscillator" class="headerlink" title="2.2 Timing / Oscillator"></a>2.2 Timing / Oscillator</h3><p>Used in RC or LC timing and oscillator circuits.</p><ul><li>Time constant: <strong>τ = R × C</strong></li><li>Consider <strong>tolerance</strong>, <strong>temperature drift</strong>, and <strong>leakage current</strong> when selecting values.</li></ul><hr><h3 id="2-3-Coupling-AC-Blocking"><a href="#2-3-Coupling-AC-Blocking" class="headerlink" title="2.3 Coupling / AC Blocking"></a>2.3 Coupling / AC Blocking</h3><p>Used to <strong>pass AC</strong> signals while <strong>blocking DC</strong> bias.</p><ul><li>Common in <strong>audio</strong> and <strong>amplifier</strong> stages.</li><li>Choose capacitors with appropriate <strong>voltage ratings</strong> and <strong>low distortion</strong>.</li></ul><hr><h3 id="2-4-Bypass-Noise-Reduction"><a href="#2-4-Bypass-Noise-Reduction" class="headerlink" title="2.4 Bypass / Noise Reduction"></a>2.4 Bypass / Noise Reduction</h3><p>Used to shunt high-frequency noise and improve signal integrity.</p><ul><li>Small ceramic capacitors (e.g., 0.01 µF, 0.1 µF) are placed close to active components.</li><li>Use <strong>multiple capacitors in parallel</strong> (e.g., 0.1 µF + 10 µF) to cover a wide frequency range.</li></ul><hr><h3 id="2-5-Energy-Storage-Pulsing"><a href="#2-5-Energy-Storage-Pulsing" class="headerlink" title="2.5 Energy Storage / Pulsing"></a>2.5 Energy Storage / Pulsing</h3><p>Used to store and release energy for short bursts.</p><ul><li>Common in <strong>power supplies</strong> and <strong>motor drivers</strong>.</li><li>Use <strong>large electrolytics</strong> or <strong>supercapacitors</strong> with sufficient <strong>voltage</strong> and <strong>ripple current</strong> ratings.</li></ul><hr><h3 id="2-6-Snubber-Damping"><a href="#2-6-Snubber-Damping" class="headerlink" title="2.6 Snubber / Damping"></a>2.6 Snubber / Damping</h3><p>Used to suppress voltage spikes, ringing, and protect switches.</p><ul><li>Typically <strong>RC series</strong> networks.</li><li>Values depend on <strong>transient energy</strong>, <strong>switching frequency</strong>, and <strong>load characteristics</strong>.</li></ul>]]></content>
    
    <summary type="html">
    
      Applied Electronics
    
    </summary>
    
    
      <category term="ece" scheme="https://robcholz.github.io/tags/ece/"/>
    
      <category term="framework" scheme="https://robcholz.github.io/tags/framework/"/>
    
  </entry>
  
  <entry>
    <title>[Foundation] LCEDA</title>
    <link href="https://robcholz.github.io/2025/09/21/lcdea/"/>
    <id>https://robcholz.github.io/2025/09/21/lcdea/</id>
    <published>2025-09-21T21:57:00.000Z</published>
    <updated>2025-11-01T22:16:20.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Foundation-LCEDA"><a href="#Foundation-LCEDA" class="headerlink" title="[Foundation] LCEDA"></a>[Foundation] LCEDA</h1><h2 id="Quick-Action"><a href="#Quick-Action" class="headerlink" title="Quick Action"></a>Quick Action</h2><ul><li>Hide Selected Traces: Command+R</li><li>Component Distribute By Region: Shift+P</li><li>Select trace: selected tracing + Shift + W</li></ul><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><ol><li>Hide all traces.</li><li>Distribute component by region.</li><li>Hide all designators.</li><li>Import DXF board.</li><li>Start the layout.</li></ol>]]></content>
    
    <summary type="html">
    
      PCB EDA
    
    </summary>
    
    
      <category term="ece" scheme="https://robcholz.github.io/tags/ece/"/>
    
      <category term="framework" scheme="https://robcholz.github.io/tags/framework/"/>
    
      <category term="software" scheme="https://robcholz.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>[Foundation]  PCB Layout Guidelines</title>
    <link href="https://robcholz.github.io/2025/09/20/pcb-layout/"/>
    <id>https://robcholz.github.io/2025/09/20/pcb-layout/</id>
    <published>2025-09-20T21:51:00.000Z</published>
    <updated>2025-11-01T22:16:20.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Foundation-PCB-Layout-Guidelines"><a href="#Foundation-PCB-Layout-Guidelines" class="headerlink" title="[Foundation] PCB Layout Guidelines"></a>[Foundation] PCB Layout Guidelines</h1><h2 id="1-Background"><a href="#1-Background" class="headerlink" title="1. Background"></a>1. Background</h2><h3 id="Trace-Width-vs-Current-1-oz-Copper"><a href="#Trace-Width-vs-Current-1-oz-Copper" class="headerlink" title="Trace Width vs Current (1 oz Copper)"></a>Trace Width vs Current (1 oz Copper)</h3><table><thead><tr><th>Current</th><th>Typical Trace Width</th><th>Notes</th></tr></thead><tbody><tr><td>GPIO / Low current</td><td>6 mil</td><td>Standard signal width</td></tr><tr><td>0.5 A</td><td>10 mil</td><td>Suitable for LEDs, small sensors</td></tr><tr><td>1 A</td><td>20 mil</td><td></td></tr><tr><td>2 A</td><td>40 mil</td><td></td></tr><tr><td>5 A</td><td>100 mil</td><td></td></tr><tr><td>10 A</td><td>200 mil</td><td>Use solder mask opening and tin coverage</td></tr><tr><td>50 A</td><td>500 mil</td><td></td></tr><tr><td>100 A</td><td>1000 mil</td><td></td></tr><tr><td>200 A</td><td>2000 mil</td><td></td></tr><tr><td>500 A</td><td>5000 mil</td><td>Use ≥4.5 oz copper or bus bars</td></tr></tbody></table><blockquote><p>For high-current paths, widen the trace, increase copper thickness, or apply solder coverage.</p></blockquote><h3 id="Additional-Notes"><a href="#Additional-Notes" class="headerlink" title="Additional Notes"></a>Additional Notes</h3><ul><li>On compact boards, silkscreen reference designators can be omitted.</li><li>Follow the <strong>3W rule</strong> for high-speed signal integrity:<br>→ Distance between traces ≥ 3× trace width.</li></ul><hr><h2 id="2-Layer-Stack-and-Net-Allocation"><a href="#2-Layer-Stack-and-Net-Allocation" class="headerlink" title="2. Layer Stack and Net Allocation"></a>2. Layer Stack and Net Allocation</h2><h3 id="Two-Layer-Board"><a href="#Two-Layer-Board" class="headerlink" title="Two-Layer Board"></a>Two-Layer Board</h3><ul><li>Bottom layer should be as continuous <strong>GND plane</strong> as possible.</li></ul><h3 id="Four-Layer-Board-Options"><a href="#Four-Layer-Board-Options" class="headerlink" title="Four-Layer Board Options"></a>Four-Layer Board Options</h3><table><thead><tr><th>Type</th><th>Stackup</th><th>Characteristics</th></tr></thead><tbody><tr><td><strong>Type 1</strong></td><td>GND / SIG-1 / SIG-2 / PWR</td><td>Simple, but discontinuous impedance</td></tr><tr><td><strong>Type 2</strong></td><td>SIG-1 / PWR / GND / SIG-2</td><td>Good for top-side components or signals</td></tr><tr><td><strong>Type 3</strong></td><td>SIG-1 / GND / PWR / SIG-2</td><td>Good for bottom-side components</td></tr></tbody></table><hr><h2 id="3-Layout-Process"><a href="#3-Layout-Process" class="headerlink" title="3. Layout Process"></a>3. Layout Process</h2><h3 id="EMC-Improvement"><a href="#EMC-Improvement" class="headerlink" title="EMC Improvement"></a>EMC Improvement</h3><h4 id="20H-Rule"><a href="#20H-Rule" class="headerlink" title="20H Rule"></a>20H Rule</h4><ul><li>Shrink the <strong>PWR plane</strong> by:<ul><li><strong>20 mil</strong> → reduces electric field by ~70%</li><li><strong>100 mil</strong> → reduces electric field by ~98%</li></ul></li></ul><h3 id="Recommended-Workflow"><a href="#Recommended-Workflow" class="headerlink" title="Recommended Workflow"></a>Recommended Workflow</h3><ol><li>Place mechanically constrained components first (USB, connectors, mounting holes).</li><li>Plan functional regions: <strong>power</strong>, <strong>digital</strong>, <strong>analog</strong>.</li><li>Route critical or high-speed signals first.</li><li>Add <strong>fanout vias</strong> for low-current power nets.</li><li>Complete all routing.</li><li>Optimize critical traces (short, direct, orthogonal).</li><li>Add <strong>teardrops</strong> and <strong>copper pour</strong>.</li><li>Refine and balance copper planes.</li><li>Run <strong>DRC checks</strong>, verify silkscreen and text orientation.</li><li>Export <strong>Gerber</strong>, <strong>Pick &amp; Place</strong>, and <strong>BOM</strong> files.</li></ol><hr><h2 id="4-Component-Placement-and-Routing"><a href="#4-Component-Placement-and-Routing" class="headerlink" title="4. Component Placement and Routing"></a>4. Component Placement and Routing</h2><h3 id="General"><a href="#General" class="headerlink" title="General"></a>General</h3><ul><li>Align designators consistently (e.g., all facing same direction).</li></ul><hr><h3 id="Quartz-Crystal"><a href="#Quartz-Crystal" class="headerlink" title="Quartz Crystal"></a>Quartz Crystal</h3><ul><li>Guard crystal traces with a <strong>10 mil GND ring</strong>.</li><li>Do <strong>not</strong> route as differential pairs.</li><li>Place <strong>as close as possible</strong> to MCU pins.</li><li>Maintain a <strong>solid GND plane</strong> beneath.</li></ul><hr><h3 id="USB-2-0-Interface"><a href="#USB-2-0-Interface" class="headerlink" title="USB 2.0 Interface"></a>USB 2.0 Interface</h3><ul><li>D+/D− are <strong>differential pairs</strong> (~90 Ω differential impedance).</li><li>No copper pour or vias underneath pair.</li><li>Add <strong>bidirectional TVS diode</strong> across D+/D−.</li><li>Add <strong>unidirectional TVS diode</strong> across VBUS and GND.</li><li>Ensure trace widths and planes handle expected <strong>VBUS current</strong>.</li></ul><hr><h3 id="Ground-Domains"><a href="#Ground-Domains" class="headerlink" title="Ground Domains"></a>Ground Domains</h3><ul><li>Separate <strong>AGND</strong>, <strong>DGND</strong>, and <strong>PGND</strong> to minimize interference.</li><li>Connect via:<ul><li>Single point (star ground), or</li><li>Capacitive coupling between domains.</li></ul></li></ul><table><thead><tr><th>Domain</th><th>Recommendation</th></tr></thead><tbody><tr><td><strong>AGND</strong></td><td>Close to analog reference voltage, filters, and amplifiers</td></tr><tr><td><strong>DGND</strong></td><td>Near digital ICs and loads</td></tr><tr><td><strong>PGND</strong></td><td>For high-current or power circuits; connect to star point or via capacitor</td></tr></tbody></table><hr><h3 id="DC-DC-Converter"><a href="#DC-DC-Converter" class="headerlink" title="DC-DC Converter"></a>DC-DC Converter</h3><ul><li>Keep <strong>SW</strong> and <strong>FB</strong> traces as short as possible.</li><li>Isolate inductor from analog and high-speed regions.</li><li>Surround with <strong>GND via fence</strong> to confine EMI.</li><li>Place input/output capacitors <strong>close to pins</strong> — from bulk → ceramic.</li><li>Check chip’s <strong>thermal resistance (°C/W)</strong> and ensure adequate copper area or vias for heat dissipation.</li></ul><hr><h3 id="SDRAM-Design"><a href="#SDRAM-Design" class="headerlink" title="SDRAM Design"></a>SDRAM Design</h3><h4 id="Single-SDRAM"><a href="#Single-SDRAM" class="headerlink" title="Single SDRAM"></a>Single SDRAM</h4><ul><li>Point-to-point routing.</li><li>Place close to MCU/BGA (600–800 mil without resistors; 800–1000 mil with).</li><li>Decoupling capacitors must be <strong>adjacent to power pins</strong>.</li></ul><h4 id="Dual-SDRAM"><a href="#Dual-SDRAM" class="headerlink" title="Dual SDRAM"></a>Dual SDRAM</h4><ul><li>Place <strong>symmetrically</strong> relative to CPU.</li><li>Prefer both on the same layer if space allows; otherwise, top/bottom mirrored.</li><li>Maintain same routing length as single SDRAM layout.</li></ul><h4 id="Routing-Notes"><a href="#Routing-Notes" class="headerlink" title="Routing Notes"></a>Routing Notes</h4><ul><li>Target impedance ≈ <strong>50 Ω</strong>.</li><li>Keep each 9-bit group (D0–D7 + LDQM, D8–D15 + HDQM) on one layer.</li><li>Maintain <strong>≥3W spacing</strong> or <strong>20 mil</strong> between data, address, and clock lines.</li><li>Add GND guard traces (15–30 mil) where possible.</li><li>Length-match tolerances:<ul><li>Data lines: ±50 mil</li><li>Addr/Ctrl/Clock: ±100 mil</li></ul></li></ul><hr><h3 id="TF-MicroSD-Card"><a href="#TF-MicroSD-Card" class="headerlink" title="TF (MicroSD) Card"></a>TF (MicroSD) Card</h3><table><thead><tr><th>Speed</th><th>Impedance Requirement</th></tr></thead><tbody><tr><td>≤ 25 MHz</td><td>~50 Ω single-ended</td></tr><tr><td>&gt; 25 MHz</td><td>~95 Ω differential</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      PCB Layout Guidelines
    
    </summary>
    
    
      <category term="ece" scheme="https://robcholz.github.io/tags/ece/"/>
    
      <category term="framework" scheme="https://robcholz.github.io/tags/framework/"/>
    
  </entry>
  
  <entry>
    <title>[Foundation] Setup CLion with STM32CubeMX project for STM32 Development on macOS</title>
    <link href="https://robcholz.github.io/2023/01/22/clion-dev-macos/"/>
    <id>https://robcholz.github.io/2023/01/22/clion-dev-macos/</id>
    <published>2023-01-22T03:52:00.000Z</published>
    <updated>2025-11-01T22:16:20.182Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Setup-CLion-with-STM32CubeMX-project-for-STM32-Development-on-macOS"><a href="#Setup-CLion-with-STM32CubeMX-project-for-STM32-Development-on-macOS" class="headerlink" title="Setup CLion with STM32CubeMX project for STM32 Development on macOS"></a>Setup CLion with STM32CubeMX project for STM32 Development on macOS</h1><p>Keil is very easy to handle for embedded development but might not have some functionalities such as code completion and inlay hint. This would trouble you especially when you want to conduct a big project.</p><p>IDEs by Jetbrains like Intellij and Pycharm are very popular in the market. They have many advantages including charming UIs, good usability, safe refactoring. Doubtlessly, their IDEs could greatly assist your coding works. CLion is a cross-platform IDE for C/C++ development by Jetbrains, and I will guide you to setup a basic development environment for STM32 with CLion in this tutorial.</p><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><h3 id="Software"><a href="#Software" class="headerlink" title="Software"></a>Software</h3><ul><li>A computer with macOS(for sure)</li><li>CLion</li><li>STM32CubeMX</li><li>Homebrew</li></ul><h3 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h3><ul><li>STM32 MCU</li><li>ST-Link/J-Link</li></ul><h2 id="Installations"><a href="#Installations" class="headerlink" title="Installations"></a>Installations</h2><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h3><h4 id="CLion"><a href="#CLion" class="headerlink" title="CLion"></a><a href="https://www.jetbrains.com/clion/download/#section=mac" target="_blank" rel="noopener">CLion</a></h4><blockquote><p>The version should be higher than 2019.2.</p></blockquote><h4 id="STM32CubeMX"><a href="#STM32CubeMX" class="headerlink" title="STM32CubeMX"></a><a href="https://www.st.com/en/development-tools/stm32cubemx.html#get-software" target="_blank" rel="noopener">STM32CubeMX</a></h4><blockquote><p>Downloading requires email verification.</p></blockquote><p align="middle">  <img src="/2023/01/22/clion-dev-macos/open_package.png" style="width:500px" alt="open"></p><ul><li>After you unzip the downloaded file, right-click the STM32CubeMX package and click <code>Show Package Contents</code> and right click to open the executable file inside the package.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/malware_issue.png" style="width:500px" alt="open"></p><ul><li>There will be an error window popped up. Click <code>Cancel</code>.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/privacy_setting.png" title="width=500"></p><ul><li>Open <code>Security &amp; Privacy</code> in <code>System Preferences</code> and click <code>Allow Anyway</code>.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/open_cubemx.png" title="width=500"></p><ul><li>Open STM32CubeMX executable file again in the package and click <code>Open</code>.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/installation_wizard.png" title="width=500"></p><ul><li>Install STM32CubeMX.</li></ul><h4 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a></h4><blockquote><p>Validate the installation <code>brew -v</code>.</p></blockquote><p>You should have installed these tools above before you continue the next step.</p><h4 id="ARM-Toolchain"><a href="#ARM-Toolchain" class="headerlink" title="ARM Toolchain"></a>ARM Toolchain</h4><ul><li>Run <code>brew tap ArmMbed/homebrew-formulae</code> and <code>brew install arm-none-eabi-gcc</code> in the terminal.</li></ul><blockquote><p>Validate the installation: <code>arm-none-eabi-gcc -v</code>.</p></blockquote><h4 id="OpenOCD"><a href="#OpenOCD" class="headerlink" title="OpenOCD"></a>OpenOCD</h4><p><code>brew install open-ocd</code></p><blockquote><p>Validate the installation: <code>openocd -v</code>.</p></blockquote><h2 id="CLion-Configurations"><a href="#CLion-Configurations" class="headerlink" title="CLion Configurations"></a>CLion Configurations</h2><h3 id="OpenOCD-amp-STM32CubeMX-Paths"><a href="#OpenOCD-amp-STM32CubeMX-Paths" class="headerlink" title="OpenOCD &amp; STM32CubeMX Paths"></a>OpenOCD &amp; STM32CubeMX Paths</h3><p align="middle">  <img src="/2023/01/22/clion-dev-macos/embedded_dev_tools_set.png" title="width=500"></p><ul><li>Generally, both of your OpenOCD and CubeMX locations should be as same as me. Remember to test your paths by clicking <code>Test</code>.</li></ul><h3 id="Toolchains"><a href="#Toolchains" class="headerlink" title="Toolchains"></a>Toolchains</h3><p align="middle">  <img src="/2023/01/22/clion-dev-macos/toolchains.png" title="width=500"></p><ul><li>Set build tools, C/C++ compilers and debuggers. You should use <code>Bundled GDB</code> or like me, manually set another GDB path for <code>Debugger</code> option.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/new_project.png" title="width=500"></p><ul><li>Create a new <code>STM32CubeMX</code> project.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/select_board_type.png" title="width=500"></p><ul><li>Here, you can either click <code>Use</code> to choose a board type or click <code>Skip</code> to choose one later.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/open_with_cubemx.png" title="width=500"></p><ul><li>Click <code>Open with STM32CubeMX</code> to open the application.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/mcu_before.png" title="width=500"></p><ul><li>The default MCU is <code>STM32F030F4Px</code>.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/mcu_after.png" title="width=500"></p><ul><li>You can use STM32CubeMX like what you do everyday.</li></ul><p align="middle">  <img src="/2023/01/22/clion-dev-macos/ide_selection.png" title="width=500"></p><blockquote><ul><li>You have to select <code>STM32CubeIDe</code> in <code>Toolchain / IDE</code> setting, and the <code>Project Name</code> should be kept as same as the project name in CLion.</li></ul></blockquote><p align="middle">  <img src="/2023/01/22/clion-dev-macos/edit_config.png" title="width=500"></p><ul><li>After you generate code and overwrite the old project files, click <code>Assist</code> and choose a board type in <code>Run/Debug Configurations</code>.</li></ul><blockquote><ul><li>You also need to edit the board config file in accordance to the version of your ST-Link.</li></ul></blockquote><p>Congrats! You can now build, upload, and debug in CLion.</p>]]></content>
    
    <summary type="html">
    
      IDE Setup
    
    </summary>
    
    
      <category term="ece" scheme="https://robcholz.github.io/tags/ece/"/>
    
      <category term="framework" scheme="https://robcholz.github.io/tags/framework/"/>
    
      <category term="software" scheme="https://robcholz.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>This blog has been established</title>
    <link href="https://robcholz.github.io/2022/09/25/blog-post-title-from-file-name/"/>
    <id>https://robcholz.github.io/2022/09/25/blog-post-title-from-file-name/</id>
    <published>2022-09-25T06:55:10.000Z</published>
    <updated>2025-11-01T22:16:20.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="This-blog-has-been-established"><a href="#This-blog-has-been-established" class="headerlink" title="This blog has been established"></a>This blog has been established</h2><p>Blog establishment</p><hr>]]></content>
    
    <summary type="html">
    
      Blog establishment
    
    </summary>
    
    
  </entry>
  
</feed>
